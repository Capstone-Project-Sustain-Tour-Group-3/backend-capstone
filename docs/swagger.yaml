openapi: '3.0.2'
info:
  title: Tourease API
  version: '1.0'
servers:
  - url: https://api.tourease.my.id/v1
    description: Production Server
  - url: http://localhost:1323/v1
    description: Development Server
tags:
  - name: Mobile - Auth
  - name: Mobile - Destinations
  - name: Admin - Users
  - name: Admin - Auth
paths:
  /auth/register:
    post:
      tags:
        - Mobile - Auth
      summary: Registrasi Pengguna
      description: API untuk registrasi pengguna baru.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "johndoe"
                nama_lengkap:
                  type: string
                  example: "John Doe"
                email:
                  type: string
                  example: "johndoe@example.com"
                no_telepon:
                  type: string
                  example: "081234567891"
                password:
                  type: string
                  example: "password123"
      responses:
        '201':
          description: Registrasi Berhasil
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Success"
                  message:
                    type: string
                    example: "Registrasi berhasil!"
                  data:
                    type: object
                    properties:
                      reference_id:
                        type: string
                        example: "fAwCnf3TSOkSqB9M"
        '409':
          description: Konflik
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "username sudah ada, silahkan gunakan username lain"
  /auth/resend-otp:
    post:
      tags:
        - Mobile - Auth
      summary: Kirim Ulang OTP
      description: API untuk mengirim ulang OTP.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  example: "user@example.com"
      responses:
        '200':
          description: OTP Berhasil Dikirimkan
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Success"
                  message:
                    type: string
                    example: "OTP berhasil dikirimkan"
                  data:
                    type: object
                    properties:
                      reference_id:
                        type: string
                        example: "WCTp17O4Uu2CZ88O"
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Error"
                  message:
                    type: string
                    example: "Invalid email address"

  /auth/verify:
      post:
        tags:
          - Mobile - Auth
        summary: Verifikasi OTP
        description: API untuk verifikasi OTP.
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  ref_id:
                    type: string
                    example: "WCTp17O4Uu2CZ88O"
                  otp:
                    type: string
                    example: "7523"
        responses:
          '200':
            description: OTP Valid
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      example: "Success"
                    message:
                      type: string
                      example: "OTP Valid"
          '400':
            description: OTP Tidak Cocok
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      example: "Failed"
                    message:
                      type: string
                      example: "Kode OTP tidak cocok. Mohon periksa kembali dan masukkan dengan benar."
  /auth/forgot-password:
    put:
      tags:
        - Mobile - Auth
      summary: Reset Password
      description: API untuk mengatur ulang kata sandi pengguna.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ref_id:
                  type: string
                  example: "gCGBw4IB8boTMG5B"
                password:
                  type: string
                  example: "password"
                konfirmasi_password:
                  type: string
                  example: "password"
      responses:
        '200':
          description: Password Berhasil Diubah
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Success"
                  message:
                    type: string
                    example: "Password berhasil diubah"
        '400':
          description: Password Tidak Cocok
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "Password tidak cocok"
  /auth/login:
      post:
        tags:
          - Mobile - Auth
        summary: Login Pengguna
        description: API untuk login pengguna.
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    example: "johndoe@example.com"
                  password:
                    type: string
                    example: "password123"
        responses:
          '200':
            description: Login Berhasil
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      example: "Success"
                    message:
                      type: string
                      example: "Login berhasil!"
                    data:
                      type: object
                      properties:
                        token:
                          type: string
                          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJJZCI6IjFjMmYwNzNmLTExYjQtNDdkMi1hYjQ2LThmNGY3YTQyOGNmMyIsIlVzZXJuYW1lIjoiam9obmRvZSIsImV4cCI6MTcxNjYyNDUxMSwiaWF0IjoxNzE2NjIwOTExLCJuYmYiOjE3MTY2MjA5MTF9.8fs4oFCGo2eRxiw4hnm0emajeG1rpZKGvAi_O-vfW5o"
          '409':
            description: Akun Tidak Ditemukan
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      example: "Failed"
                    message:
                      type: string
                      example: "Akun tidak ditemukan"
          '401':
            description: Email Belum Terverifikasi
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    status:
                      type: string
                      example: "Failed"
                    message:
                      type: string
                      example: "Email belum terverifikasi"
  /admin/auth/users:
    post:
      tags:
        - Admin - Auth
      summary: Admin Login
      description: API untuk login admin.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "tourease"
                password:
                  type: string
                  example: "12345678"
      responses:
        '200':
          description: Login Successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Success"
                  message:
                    type: string
                    example: "You have successfully logged in"
                  data:
                    type: object
                    properties:
                      username:
                        type: string
                        example: "admintourease"
                      profile_image:
                        type: string
                        example: ""
                      role:
                        type: string
                        example: "admin"
                      token:
                        type: string
                        example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJJZCI6ImFhNjJjZDA5LTU0YjUtNGViNC04MjNmLWMzNjI4ZWFlYmQ0MSIsIlVzZXJuYW1lIjoiYWRtaW50b3VyZWFzZSIsIlJvbGUiOiJhZG1pbiIsImV4cCI6MTcxNjkxMTIzMCwiaWF0IjoxNzE2OTA5NDMwLCJuYmYiOjE3MTY5MDk0MzB9.Iesz7CdqiA-5xyJa3I3w2rkZTjC7ZR27FMPz3HwhYOs"
        '409':
          description: Account Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "Akun tidak ditemukan"
  /admin/users:
    get:
      tags:
        - Admin - Users
      summary: Mendapatkan Data User
      description: API untuk mendapatkan daftar pengguna.
      parameters:
        - name: search
          in: query
          required: false
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: page
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Data User Ditemukan
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Success"
                  message:
                    type: string
                    example: "data user berhasil ditemukan"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "803f6cc0-e598-4b59-a300-8b8603482d14"
                        username:
                          type: string
                          example: "username"
                        email:
                          type: string
                          example: "email@example.com"
                        no_telepon:
                          type: string
                          example: "081234567890"
                        jenis_kelamin:
                          type: string
                          example: "pria"
                        kota:
                          type: string
                          example: "Jaksel"
                        provinsi:
                          type: string
                          example: "Jakarta"
                  pagination:
                    type: object
                    properties:
                      total:
                        type: integer
                        example: 4
                      per_page:
                        type: integer
                        example: 10
                      current_page:
                        type: integer
                        example: 1
                      last_page:
                        type: integer
                        example: 1
    post:
      tags:
        - Admin - Users
      summary: Menambah data user
      description: API untuk menambah pengguna baru.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "username"
                password:
                  type: string
                  example: "12345678"
                nama_lengkap:
                  type: string
                  example: "nama_lengkap"
                bio:
                  type: string
                  example: "bio"
                email:
                  type: string
                  example: "email3@example.com"
                no_telepon:
                  type: string
                  example: "081234567890"
                foto_profil:
                  type: string
                  example: "img.jpg"
                jenis_kelamin:
                  type: string
                  example: "pria"
                kota:
                  type: string
                  example: "Jaksel"
                provinsi:
                  type: string
                  example: "Jakarta"
      responses:
        '201':
          description: Data User Berhasil Ditambah
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Success"
                  message:
                    type: string
                    example: "data user berhasil ditambah"
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "gagal untuk menambah data user"
  /admin/users/{id}:
    get:
      tags:
        - Admin - Users
      summary: Get User Detail
      description: API untuk mendapatkan detail pengguna.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Data User Ditemukan
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Success"
                  message:
                    type: string
                    example: "data user berhasil ditemukan"
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: "803f6cc0-e598-4b59-a300-8b8603482d14"
                      username:
                        type: string
                        example: "username"
                      nama_lengkap:
                        type: string
                        example: "username lengkap"
                      bio:
                        type: string
                        example: "bio"
                      email:
                        type: string
                        example: "email@example.com"
                      no_telepon:
                        type: string
                        example: "081234567890"
                      foto_profil:
                        type: string
                        example: "img.jpg"
                      jenis_kelamin:
                        type: string
                        example: "pria"
                      kota:
                        type: string
                        example: "Jaksel"
                      provinsi:
                        type: string
                        example: "Jakarta"
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "Gagal untuk memperbarui data user"
    put:
      tags:
        - Admin - Users
      summary: Data user diperbarui
      description: API untuk memperbarui data pengguna.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: "username"
                password:
                  type: string
                  example: "12345678"
                nama_lengkap:
                  type: string
                  example: "nama_lengkap"
                bio:
                  type: string
                  example: "bio"
                email:
                  type: string
                  example: "email3@example.com"
                no_telepon:
                  type: string
                  example: "081234567890"
                foto_profil:
                  type: string
                  example: "img.jpg"
                jenis_kelamin:
                  type: string
                  example: "pria"
                kota:
                  type: string
                  example: "Jaksel"
                provinsi:
                  type: string
                  example: "Jakarta"
      responses:
        '200':
          description: Data User Berhasil Diubah
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Success"
                  message:
                    type: string
                    example: "data user berhasil diubah"
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "Gagal untuk memperbarui data user"
    delete:
      tags:
        - Admin - Users
      summary: Delete User
      description: API untuk menghapus pengguna.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Data User Berhasil Dihapus
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Success"
                  message:
                    type: string
                    example: "data user berhasil dihapus"
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "User tidak ditemukan"

  /destinations:
    get:
      tags:
        - Mobile - Destinations
      summary: Mencari destinasi wisata
      description: API untuk mencari daftar destinasi wisata.
      parameters:
        - name: search
          in: query
          required: false
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: integer
        - name: page
          in: query
          required: false
          schema:
            type: integer
        - name: sort
          in: query
          required: false
          schema:
            type: string
            description: urutkan berdasarkan
            enum:
              - populer
              - terlama
              - terbaru
      security:
        - BearerAuth: [ ]
      responses:
        500:
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Failed"
                  message:
                    type: string
                    example: "gagal untuk mendapatkan destinasi"
        '200':
          description: Berhasil menampilkan destinasi
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "Success"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          example: "306d305e-3359-4884-8d38-89c04e8adea6"
                        nama:
                          type: string
                          example: "Kawah Ijen"
                        url_media:
                          type: string
                          nullable: true
                          example: "https://picsum.photos/300/200"
                        provinsi:
                          type: string
                          example: "Papua Barat"
                        kota:
                          type: string
                          example: "Jakarta"
                  pagination:
                    $ref: "#/components/schemas/Pagination"
                  sort:
                    type: string
                    example: "populer"
components:
  schemas:
    Pagination:
      type: object
      properties:
        total:
          type: integer
          example: 10
        per_page:
          type: integer
          example: 10
        current_page:
          type: integer
          example: 1
        last_page:
          type: integer
          example: 1
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
